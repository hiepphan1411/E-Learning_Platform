name: Deploy Admin Frontend

on:
  push:
    branches: [ PPH ]  
    paths:
      - 'admin-frontend/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'admin-frontend/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./admin-frontend
        run: npm ci
      
      # Display directory structure for debugging
      - name: Debug - Show directory structure
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Admin frontend directory contents:"
          ls -la ./admin-frontend || echo "Directory not found"
      
      - name: Build project
        working-directory: ./admin-frontend
        run: npm run build
      
      # Debug build output directory
      - name: Debug - Show build output
        run: |
          echo "Build directory contents:"
          ls -la ./admin-frontend/build || echo "Build directory not found"
          ls -la ./admin-frontend/dist || echo "Dist directory not found"
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: admin-frontend-build
          path: |
            admin-frontend/build
            admin-frontend/dist
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: admin-frontend-build
          path: ./build-output
      
      # Debug downloaded artifact
      - name: Debug - Show downloaded artifact
        run: |
          echo "Downloaded artifact contents:"
          ls -la ./build-output
      
      - name: Deploy to hosting service
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: your-firebase-project-id
          channelId: live
          entryPoint: ./build-output
